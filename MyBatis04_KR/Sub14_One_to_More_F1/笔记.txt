<<<<<<< HEAD
[按照结果嵌套处理 查询一对多]
·功能：查询一个老师，从而得到该老师下的所有学生，即一个老师对应多个学生的查询
·核心：
    1.一对多的SQL查询语句
                select s.id s_id,s.name s_name,t.name t_name, t.id t_id
                from MyBatis_KR.student s, MyBatis_KR.teacher t
                where s.tid = t.id and t.id = #{dao_t_id}
    2.Dao_Teacher.xml是连接Dao、java的桥梁
            <select id="Dao_getTeacher" resultMap="Mapper_Teacher_to_Students">
                select s.id s_id,s.name s_name,t.name t_name, t.id t_id
                from MyBatis_KR.student s, MyBatis_KR.teacher t
                where s.tid = t.id and t.id = #{dao_t_id}
            </select>
            <!-- #{dao_t_id}的变量名，要与Dao_teacher中的@Param("dao_t_id")一致 -->

            <resultMap id="Mapper_Teacher_to_Students" type="len.pojo.Obj_teacher">
                <result property="obj_t_id" column="t_id"/>
                <result property="obj_t_name" column="t_name"/>
                <collection property="obj_t_student" ofType="len.pojo.Obj_student">
                    <result property="obj_s_id" column="t_id"/>
                    <result property="obj_s_name" column="s_name"/>
                    <result property="obj_s_teacher_id" column="t_id"/>
                </collection>
            </resultMap>
    3.关于OfType、javaType的选择
        1.JavaType：如果对应Obj_Teacher中的对象是一个对象，如一个Obj_Student
        2.OfType：如果对应Obj_Teacher中的对象是一个对象集合，如一个List<Obj_Student>
        3.以上两者在<result>上写法一样
·注意事项
=======
[按照结果嵌套处理 查询一对多]
·功能：查询一个老师，从而得到该老师下的所有学生，即一个老师对应多个学生的查询
·核心：
    1.一对多的SQL查询语句
                select s.id s_id,s.name s_name,t.name t_name, t.id t_id
                from MyBatis_KR.student s, MyBatis_KR.teacher t
                where s.tid = t.id and t.id = #{dao_t_id}
    2.Dao_Teacher.xml是连接Dao、java的桥梁
            <select id="Dao_getTeacher" resultMap="Mapper_Teacher_to_Students">
                select s.id s_id,s.name s_name,t.name t_name, t.id t_id
                from MyBatis_KR.student s, MyBatis_KR.teacher t
                where s.tid = t.id and t.id = #{dao_t_id}
            </select>
            <!-- #{dao_t_id}的变量名，要与Dao_teacher中的@Param("dao_t_id")一致 -->

            <resultMap id="Mapper_Teacher_to_Students" type="len.pojo.Obj_teacher">
                <result property="obj_t_id" column="t_id"/>
                <result property="obj_t_name" column="t_name"/>
                <collection property="obj_t_student" ofType="len.pojo.Obj_student">
                    <result property="obj_s_id" column="t_id"/>
                    <result property="obj_s_name" column="s_name"/>
                    <result property="obj_s_teacher_id" column="t_id"/>
                </collection>
            </resultMap>
    3.关于OfType、javaType的选择
        1.JavaType：如果对应Obj_Teacher中的对象是一个对象，如一个Obj_Student
        2.OfType：如果对应Obj_Teacher中的对象是一个对象集合，如一个List<Obj_Student>
        3.以上两者在<result>上写法一样
·注意事项
>>>>>>> 1da3f48 (first commit)
    1.Dao_Teacher.xml中的变量名#{dao_t_id}，要与Dao_teacher中的@Param("dao_t_id")一致