<<<<<<< HEAD
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="len.dao.BlogMapper">
    <cache/>

    <insert id="addBlog" parameterType="Blog">
        insert into MyBatis_KR.blog (id, title, author, create_time, views) values
        (#{Obj_id}, #{Obj_title}, #{Obj_author}, #{Obj_createTime}, #{Obj_views});
    </insert>

    <select id="queryBlogIF" parameterType="map" resultMap="Map_Obj_Blog">
        select * from MyBatis_KR.blog
        <where>
            <include refid="if-title-author"></include>
        </where>
    </select>

    <!-- sql标签用于创建sql语句标签模版，用于简化代码（调用时用include标签）
        （不建议包含where set标签，一般都是if标签。where set标签直接写就行不用包含在sql标签中） -->
    <sql id="if-title-author">
        <if test="Obj_title != null">
            title = #{Obj_title}
        </if>
        <if test="Obj_author != null">
            and author = #{Obj_author}
        </if>
    </sql>

    <resultMap id="Map_Obj_Blog" type="len.pojo.Blog">
        <result property="Obj_id" column="id"/>
        <result property="Obj_title" column="title"/>
        <result property="Obj_author" column="author"/>
        <result property="Obj_createTime" column="create_time"/>
        <result property="Obj_views" column="views"/>
    </resultMap>

    <select id="queryBlogchoose" parameterType="map" resultMap="Map_Obj_Blog">
        select * from MyBatis_KR.blog
        <where>
            <choose>
                <!-- 如果所有条件都满足时，Mapper只会选择最近的那个条件 -->
                <when test="title != null">
                    title = #{Obj_title}
                </when>
                <when test="author != null">
                    and author = #{Obj_author}
                </when>
                <otherwise>
                    and views = #{Obj_views}
                </otherwise>
            </choose>
        </where>
    </select>

    <update id="updateBlog" parameterType="map">
        update MyBatis_KR.blog
        <set>
            <if test="Obj_title != null">
                title = #{Obj_title},
            </if>
            <if test="Obj_author != null">
                author = #{Obj_author}
            </if>
        </set>
        where id = #{Obj_id}
    </update>

    <!--ids是传的，#{id}是遍历的-->
    <select id="queryBlogForeach" parameterType="map" resultMap="Map_Obj_Blog">
        select * from MyBatis_KR.blog
        <where>
            <foreach collection="list_id" item="Obj_id" open="and (" close=")" separator="or">
                id=#{Obj_id}
            </foreach>
        </where>
    </select>

    <select id="queryBlogForeach_list" parameterType="list" resultMap="Map_Obj_Blog">
        select * from MyBatis_KR.blog
        <where>
            <foreach collection="list" item="Obj_id" open="and (" close=")" separator="or">
                id=#{Obj_id}
            </foreach>
        </where>
    </select>

</mapper>







=======
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="len.dao.BlogMapper">
    <cache/>

    <insert id="addBlog" parameterType="Blog">
        insert into MyBatis_KR.blog (id, title, author, create_time, views) values
        (#{Obj_id}, #{Obj_title}, #{Obj_author}, #{Obj_createTime}, #{Obj_views});
    </insert>

    <select id="queryBlogIF" parameterType="map" resultMap="Map_Obj_Blog">
        select * from MyBatis_KR.blog
        <where>
            <include refid="if-title-author"></include>
        </where>
    </select>

    <!-- sql标签用于创建sql语句标签模版，用于简化代码（调用时用include标签）
        （不建议包含where set标签，一般都是if标签。where set标签直接写就行不用包含在sql标签中） -->
    <sql id="if-title-author">
        <if test="Obj_title != null">
            title = #{Obj_title}
        </if>
        <if test="Obj_author != null">
            and author = #{Obj_author}
        </if>
    </sql>

    <resultMap id="Map_Obj_Blog" type="len.pojo.Blog">
        <result property="Obj_id" column="id"/>
        <result property="Obj_title" column="title"/>
        <result property="Obj_author" column="author"/>
        <result property="Obj_createTime" column="create_time"/>
        <result property="Obj_views" column="views"/>
    </resultMap>

    <select id="queryBlogchoose" parameterType="map" resultMap="Map_Obj_Blog">
        select * from MyBatis_KR.blog
        <where>
            <choose>
                <!-- 如果所有条件都满足时，Mapper只会选择最近的那个条件 -->
                <when test="title != null">
                    title = #{Obj_title}
                </when>
                <when test="author != null">
                    and author = #{Obj_author}
                </when>
                <otherwise>
                    and views = #{Obj_views}
                </otherwise>
            </choose>
        </where>
    </select>

    <update id="updateBlog" parameterType="map">
        update MyBatis_KR.blog
        <set>
            <if test="Obj_title != null">
                title = #{Obj_title},
            </if>
            <if test="Obj_author != null">
                author = #{Obj_author}
            </if>
        </set>
        where id = #{Obj_id}
    </update>

    <!--ids是传的，#{id}是遍历的-->
    <select id="queryBlogForeach" parameterType="map" resultMap="Map_Obj_Blog">
        select * from MyBatis_KR.blog
        <where>
            <foreach collection="list_id" item="Obj_id" open="and (" close=")" separator="or">
                id=#{Obj_id}
            </foreach>
        </where>
    </select>

    <select id="queryBlogForeach_list" parameterType="list" resultMap="Map_Obj_Blog">
        select * from MyBatis_KR.blog
        <where>
            <foreach collection="list" item="Obj_id" open="and (" close=")" separator="or">
                id=#{Obj_id}
            </foreach>
        </where>
    </select>

</mapper>







>>>>>>> 1da3f48 (first commit)
