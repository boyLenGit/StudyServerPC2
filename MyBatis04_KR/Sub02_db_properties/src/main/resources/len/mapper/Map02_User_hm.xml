<<<<<<< HEAD
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="len.dao.Dao02_User_hm"><!-- 与接口相绑定，从而让java与MySQL产生映射关系 -->
    <!--
    id写的就是api01_user厘米的findAll1方法。有了它就有了SQL执行语句，就可以获取PreparedSatement
    -->
    <select id="getUserList2_hm" resultType="len.pojo.Obj02_User_hm"><!-- resultType就是指定返回数据的类型，这里直接用我们定义的对象 -->
        select * from user;
    </select>
</mapper>
        <!--
         【注意事项】
         1.mybatis的映射配置文件位置必须和API01_user.java接口的包结构相同
         2.映射配置文件的mapper标签namespace属性的取值必须是API01_user.java接口的全限定类名
         3.映射配置文件的操作配置（select），id属性的取值必须是API01_user.java接口的方法名，如上面写的findAll1
=======
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="len.dao.Dao02_User_hm"><!-- 与接口相绑定，从而让java与MySQL产生映射关系 -->
    <!--
    id写的就是api01_user厘米的findAll1方法。有了它就有了SQL执行语句，就可以获取PreparedSatement
    -->
    <select id="getUserList2_hm" resultType="len.pojo.Obj02_User_hm"><!-- resultType就是指定返回数据的类型，这里直接用我们定义的对象 -->
        select * from user;
    </select>
</mapper>
        <!--
         【注意事项】
         1.mybatis的映射配置文件位置必须和API01_user.java接口的包结构相同
         2.映射配置文件的mapper标签namespace属性的取值必须是API01_user.java接口的全限定类名
         3.映射配置文件的操作配置（select），id属性的取值必须是API01_user.java接口的方法名，如上面写的findAll1
>>>>>>> 1da3f48 (first commit)
         -->